
{
  // Place your snippets for python here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  "Declare main function": {
    "prefix": "main",
    "body": [
      "def main():",
      "    pass",
      "",
      "",
      "if __name__ == '__main__':",
      "    main()"
    ]
  },

  "Shebang": {
    "prefix": "#!",
    "body": ["#!/usr/bin/env python", "# @SakiiR", ""]
  },

  "Declare pwntools connection function": {
    "prefix": "pwnconnect",
    "body": [
      "from pwn import *",
      "",
      "context.terminal = ['tmux', 'splitw', '-v']",
      "",
      "configuration = {",
      "    'DEBUG': True,",
      "    'REMOTE': False,",
      "    'HOST': '$1',",
      "    'PORT': int('$2'),",
      "    'BINARY_PATH': '$3',",
      "    'GDBSCRIPT': 'c\\n'",
      "}",
      "",
      "",
      "def connect():",
      "    elf = ELF(configuration['BINARY_PATH'])",
      "    if configuration['REMOTE']:",
      "        s = remote(configuration['HOST'], configuration['PORT'])",
      "    else:",
      "        if configuration['DEBUG']:",
      "            s = gdb.debug(",
      "                configuration['BINARY_PATH'], gdbscript=configuration['GDBSCRIPT']",
      "            )",
      "        else:",
      "            s = process(configuration['GDBSCRIPT'])",
      "    return elf, s",
      ""
    ]
  }
}
