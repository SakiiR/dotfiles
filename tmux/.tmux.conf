# Terminal
set -g default-terminal "screen-256color"

# Vi style keys
set -g mode-keys vi
bind Enter copy-mode
bind P paste-buffer
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

# No latency
# Neovim likes this
set -g escape-time 0

# Mouse
set -g mouse on

# Remap master key
# C-b --> C-a
unbind C-b
set -g prefix C-a

# Split panes
unbind '"'
unbind %
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Creation on current directoy
bind c new-window -c "#{pane_current_path}"

# Panes switch
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Panes Resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# ...........
# Clipboard
# ...........
# copy to Mac OSX clipboard
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'
# ...........


# Replace list-session by choose-tree
unbind s
bind s choose-tree

# Replace informations by (i)nitialize new session
unbind i
bind i new-session

# Show/hide bar
bind space set -g status
# And hide it by default
# set -g status off

# Bar on the top sometimes
set-option -g status-position top

# Bar colors
set -g status-fg black
set -g status-bg black

# Relative index starts @ one
set -g base-index 1
setw -g pane-base-index 1

# Bar display
# Window name
#setw -g window-status-format '#[fg=brightblack]| #I.#W#[fg=default]'
setw -g window-status-format '#[fg=brightblack] #W#[fg=default]'

# Window name and active indicator
#setw -g window-status-current-format '#[fg=brightblack]| #I.#[fg=default]#[fg=red]#W#[fg=default]'
setw -g window-status-current-format '#[fg=brightblack] #[fg=default]#[fg=red]#W#[fg=default]'

# Left
# Sessions name
set -g status-left "#[fg=green,bold]#S#[fg=default,nobold] "

# Right
# Display user informationk
set -g status-right "#[fg=brightblack]#(battery -e -a | cut -d "[" -f2 | cut -d "]" -f1) | %d/%m/%y | %H:%M | #[fg=blue]#(tmux ls | wc -l | tr -d ' ')#[fg=brightblack] sess.#[fg=default]"

# Separators colors
set -g pane-active-border-style fg=colour240
set -g pane-border-style fg=colour240

# No automatic rename
set -g allow-rename off

# Rename shortcut
bind r command-prompt 'rename-window %%'

# -- general -------------------------------------------------------------------

set -g default-terminal "screen-256color" # colors!
setw -g xterm-keys on
set -s escape-time 10                     # faster command sequences
set -sg repeat-time 600                   # increase repeat timeout
set -s focus-events on

set -g prefix2 C-a                        # GNU-Screen compatible prefix
bind C-a send-prefix -2

set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on

set -g history-limit 5000                 # boost history

# reload configuration
bind R source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'


# -- display -------------------------------------------------------------------

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 10     # redraw status line every 10 seconds

# activity
set -g monitor-activity on
set -g visual-activity off


# -- copy mode -----------------------------------------------------------------
run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'

if '[ -f ~/.tmux.conf.local ]' 'source ~/.tmux.conf.local'

